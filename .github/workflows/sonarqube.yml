name: SonarQube Analysis

on:
  push:
    branches:
      - main  # Analyse déclenchée sur chaque push vers la branche main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Vérification du dépôt
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Nécessaire pour une analyse complète du code source

      # Étape 2 : Configuration de Java (nécessaire pour SonarQube)
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'zulu'

      # Étape 3 : Cache Maven (optionnel, améliore la vitesse)
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Étape 4 : Construction et analyse avec SonarQube
      - name: Build and Analyze with SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=NEONCU_WebGoat \
            -Dsonar.organization=web-goat \
            -Dsonar.projectName="WebGoat"
